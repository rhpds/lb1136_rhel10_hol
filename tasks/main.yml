---

- ansible.builtin.debug:
    msg: "## rhel10_setup - start role lb1136_rhel10_hol 'The Definitive RHEL10 Hands-On Lab'"

# Every host touched by the role
- block:
    - name: "rhel10_setup - create progress log"
      ansible.builtin.lineinfile:
        state: present
        create: true
        insertafter: EOF
        dest: "/var/tmp/lb1136-progress.log"
        line: "[{{ ansible_hostname }}] lb1136_rhel10_hol role processing"

    - name: "rhel10-setup - determine subdomain-internal from resolv.conf"
      ansible.builtin.shell:
        cmd: grep {{ guid }} /etc/resolv.conf | tr '[:space:] ' '\n' | grep {{ guid }}
      register: domain_result

    - name: "rhel10-setup - set fact internal_domain"
      ansible.builtin.set_fact: 
        internal_domain: "{{ domain_result.stdout }}"

    - name: "rhel10-setup - fetch pub ssh keys from bastion"
      delegate_to: "{{ groups['bastions'][0] }}"
      ansible.builtin.shell:
        cmd: cat ~{{ student_name }}/.ssh/*.pub
      register: pubkeys_result

    - name: "rhel10-setup - set fact internal_domain"
      ansible.builtin.set_fact: 
        bastion_pubkeys: "{{ pubkeys_result.stdout }}"


# Every host in group 'nodes'
- block:

    - name: "rhel10_setup - working on hostgroup 'nodes'"
      ansible.builtin.lineinfile:
        state: present
        create: true
        insertafter: EOF
        dest: "/var/tmp/lb1136-progress.log"
        line: "[{{ ansible_hostname }}] working on hostgroup 'nodes' which includes {{ groups.nodes }}"

    - name: rhel10_setup - create student user
      ansible.builtin.user:
        name: "{{ student_name }}"
        state: present
        shell: /bin/bash
        password: "{{ common_password | password_hash }}"

    - name: "rhel10_setup : check ssh directory permissions"
      ansible.builtin.file:
        path: ~{{ student_name }}/.ssh
        mode: "0700"
        owner: "{{ student_name }}"
        group: "{{ student_name }}"
        state: directory

    - name: "rhel10_setup : check ssh known_hosts permissions"
      ansible.builtin.file:
        path: "~{{ student_name }}/.ssh/known_hosts"
        mode: "0400"
        owner: "{{ student_name }}"
        group: "{{ student_name }}"
        state: touch

    - name: "rhel10_setup : clean up known_hosts for {{ student_name }}"
      vars:
        p_file: "~{{ student_name }}/.ssh/known_hosts"
      ansible.builtin.shell:
        cmd: |
          ssh-keygen -f {{ p_file }} -R {{ hostvars[item]['inventory_hostname_short'] }}
          ssh-keygen -f {{ p_file }} -R {{ hostvars[item]['inventory_hostname_short'] }}.{{ internal_domain }}
      with_items:
        - "{{ groups['bastions'] }}"
        - "{{ groups['nodes'] }}"
      ignore_errors: yes
      become: yes
      become_user: "{{ student_name }}"

    - name: "rhel10_setup: scan and add ssh keys to known_hosts for {{ student_name }}"
      vars:
        p_file: "~{{ student_name }}/.ssh/known_hosts"
      ansible.builtin.shell:
        cmd: |
          ssh-keyscan {{ hostvars[item]['inventory_hostname_short'] }} >> {{ p_file }}
          ssh-keyscan {{ hostvars[item]['inventory_hostname_short'] }}.{{ internal_domain }} >> {{ p_file }}
      with_items:
        - "{{ groups['bastions'] }}"
        - "{{ groups['nodes'] }}"
      ignore_errors: yes
      become: yes
      become_user: "{{ student_name }}"

    - name: "rhel10_setup - setup up authorized_keys for {{ student_name }}"
      ansible.builtin.copy:
        dest: "~{{ student_name }}/.ssh/authorized_keys"
        mode: "400"
        owner: "{{ student_name }}"
        group: "{{ student_name }}"
        content: "{{ bastion_pubkeys }}"
        
    - name: "rhel10_setup - configure sudoers for {{ student_name }}"
      ansible.builtin.lineinfile:
        state: present
        create: true
        insertafter: EOF
        dest: "/etc/sudoers.d/{{ student_name }}"
        mode: "640"
        owner: "root"
        group: "root"
        line: "{{ student_name }} ALL=(ALL) NOPASSWD: ALL"
        
  when: 
    - inventory_hostname in groups['nodes']



# Every host in group 'nodes' except 'leapp'
- block:

    - name: "rhel10_setup - working on hostgroup 'nodes' except 'leapp'"
      ansible.builtin.lineinfile:
        state: present
        create: true
        insertafter: EOF
        dest: "/var/tmp/lb1136-progress.log"
        line: "[{{ ansible_hostname }}] working on group nodes except leapp"

    ## NOTE: ansible-playbook errors with unsupported locale, resolved by installing glibc-all-langpacks
      
    - name: rhel10_setup - install minimum package requirements
      ansible.builtin.package: 
        name: ansible-core,rhel-system-roles,tmux,git,bind-utils,glibc-all-langpacks
        state: installed

  when: 
    - inventory_hostname in groups['nodes']
    - inventory_hostname_short != 'leapp'



# Only 'node1'
- block:
  - name: "rhel10_setup - working only on node 'node1'"
    ansible.builtin.lineinfile:
        state: present
        create: true
        insertafter: EOF
        dest: "/var/tmp/lb1136-progress.log"
        line: "[{{ ansible_hostname }}] working only on node1"

  - name: "rhel10-setup - dumping hostvars"
    ansible.builtin.copy:
      dest: "/var/tmp/lb1136-hostvars.yml"
      content: "{{ hostvars | to_nice_yaml }}"
        
  - name: "rhel10-setup - git clone course repo"
    ansible.builtin.git:
      repo: "https://github.com/xtophd/RHEL10-Workshop.git"
      dest: "/root/RHEL10-Workshop"
      version: "summit-2025"
      clone: yes

  - name: "rhel10-setup - create gpte-guid config file"
    ansible.builtin.copy:
      dest: "/root/RHEL10-Workshop/config/gpte-guid.txt"
      mode: "400"
      content: "{{ guid }}"

  - name: "rhel10-setup - create gpte-student config file"
    ansible.builtin.copy:
      dest: "/root/RHEL10-Workshop/config/gpte-student.txt"
      mode: "400"
      content: "{{ student_name }}"

  - name: "rhel10-setup - create gpte-studentpw config file"
    ansible.builtin.copy:
      dest: "/root/RHEL10-Workshop/config/gpte-studentpw.txt"
      mode: "400"
      content: "{{ student_password }}"

  - name: "rhel10-setup - create gpte-subdomain-internal config file"
    ansible.builtin.copy:
      dest: "/root/RHEL10-Workshop/config/gpte-subdomain-internal.txt"
      mode: "400"
      content: "{{ internal_domain }}"
    
  - name: "rhel10-setup - create gpte-pub-fqdn-shortname config files"
    vars:
      shortname: "{{ item | regex_replace('\\..*$') }}"
      hostname: "{{ item | regex_replace('\\..*$') }}.{{ guid }}{{ subdomain_base_suffix }}"
    ansible.builtin.copy:
      dest: "/root/RHEL10-Workshop/config/gpte-pub-fqdn-{{ shortname }}.txt"
      mode: "400"
      content: "{{ hostname }}"
    with_items:
      - "{{ groups['nodes'] }}"
      - "{{ groups['bastions'][0] }}"

  - name: "rhel10-setup - create link to gpte config"
    file:
      src: "/root/RHEL10-Workshop/sample-configs/gpte/master-config.yml"
      dest: "/root/RHEL10-Workshop/config/master-config.yml"
      state: link

  - name: "rhel10-setup - run the minimal workshop playbooks"
    ansible.builtin.shell:
      cmd: cd /root/RHEL10-Workshop; ./rhel10-workshop.sh prep
        
  ignore_errors: yes
  become: true
  when: 
    - inventory_hostname in groups['nodes']
    - inventory_hostname_short == 'node1'
